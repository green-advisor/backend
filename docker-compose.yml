version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  backend1:
    image: ulum75/backend:v1
    container_name: laravel_backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      APP_NAME: Laravel
      APP_ENV: local
      APP_KEY: base64:jPrMGGZ2Pf2ui5QpT+u6LFBeBIfcJrqKhsciVZhpgfo=
      APP_DEBUG: false
      APP_URL: http://localhost
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: mydb
      DB_USERNAME: user
      DB_PASSWORD: password
    ports:
      - "8000:8000"
    volumes:
      # - .:/var/www/html
      - storage-volume:/var/www/html/storage
    working_dir: /var/www/html
    command: >
      sh -c "php artisan optimize:clear &&
             php artisan migrate --force &&
             php artisan serve --host=0.0.0.0 --port=8000"
    networks:
      - bridge
    
  backend2:
    image: ulum75/backend:v1
    container_name: laravel_backend2
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      APP_NAME: Laravel
      APP_ENV: local
      APP_KEY: base64:jPrMGGZ2Pf2ui5QpT+u6LFBeBIfcJrqKhsciVZhpgfo=
      APP_DEBUG: false
      APP_URL: http://localhost
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: mydb
      DB_USERNAME: user
      DB_PASSWORD: password
    ports:
      - "8001:8000"
    volumes:
      # - .:/var/www/html
      - storage-volume:/var/www/html/storage
    working_dir: /var/www/html
    command: >
      sh -c "php artisan optimize:clear &&
             php artisan serve --host=0.0.0.0 --port=8000"
    networks:
      - bridge
networks:
  bridge:

volumes:
  mysql_data:
  storage-volume:
